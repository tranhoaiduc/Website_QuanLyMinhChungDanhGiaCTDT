// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyMinhChungDanhGiaCTDT.EntityFramework;

namespace QuanLyMinhChungDanhGiaCTDT.EntityFramework.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20210318173110_InitialEFDbContext")]
    partial class InitialEFDbContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("IDENTITYROLECLAIMS");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("IDENTITYUSERCLAIMS");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("IDENTITYUSERLOGIN");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("IDENTITYUSERROLE");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("IDENTITYUSERTOKEN");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.Identity.MyIdentityRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IDENTITYROLE");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.Identity.MyIdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("DATE");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<bool>("Gender")
                        .HasColumnType("BIT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IDENTITYUSER");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.MinhChungEFEntity", b =>
                {
                    b.Property<string>("MaMinhChung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoQuanBanHanh")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("LinhVucVanBan")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("LoaiVanBan")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("MaNguoiTao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("MaTieuChi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTieuChuan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MucDo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("NgayLuu")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("DATE");

                    b.Property<string>("NguoiKyVanBan")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("NoiLuuBanChinh")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("NoiNhanCacVanBan")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("SoKyHieu")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("SoPhatHanh")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("TrichYeu")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("MaMinhChung");

                    b.HasIndex("MaTieuChi");

                    b.HasIndex("MaTieuChuan");

                    b.ToTable("MINHCHUNG");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TepTinEFEntity", b =>
                {
                    b.Property<string>("MaTepTin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("MaMinhChung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTieuChi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTieuChuan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenTepTin")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("DATE");

                    b.HasKey("MaTepTin");

                    b.HasIndex("MaMinhChung");

                    b.HasIndex("MaTieuChi");

                    b.HasIndex("MaTieuChuan");

                    b.ToTable("TEPTIN");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChiEFEntity", b =>
                {
                    b.Property<string>("MaTieuChi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GoiYNguonMinhChung")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("MaTieuChuan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MocChuanThamChieuDeDanhGiaTieuChiDatMucBon")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("TenTieuChi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("YeuCauCuaTieuChi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("MaTieuChi");

                    b.HasIndex("MaTieuChuan");

                    b.ToTable("TIEUCHI");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChuanEFEntity", b =>
                {
                    b.Property<string>("MaTieuChuan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoHopMinhChung")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenTieuChuan")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.HasKey("MaTieuChuan");

                    b.ToTable("TIEUCHUAN");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.MinhChungEFEntity", b =>
                {
                    b.HasOne("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChiEFEntity", "TieuChiEFEntityObject")
                        .WithMany("MinhChungEFEntityList")
                        .HasForeignKey("MaTieuChi");

                    b.HasOne("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChuanEFEntity", "TieuChuanEFEntityObject")
                        .WithMany("MinhChungEFEntityList")
                        .HasForeignKey("MaTieuChuan");

                    b.Navigation("TieuChiEFEntityObject");

                    b.Navigation("TieuChuanEFEntityObject");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TepTinEFEntity", b =>
                {
                    b.HasOne("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.MinhChungEFEntity", "MinhChungEFEntityObject")
                        .WithMany("TepTinEFEntityList")
                        .HasForeignKey("MaMinhChung");

                    b.HasOne("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChiEFEntity", "TieuChiEFEntityObject")
                        .WithMany("TepTinEFEntityList")
                        .HasForeignKey("MaTieuChi");

                    b.HasOne("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChuanEFEntity", "TieuChuanEFEntityObject")
                        .WithMany("TepTinEFEntityList")
                        .HasForeignKey("MaTieuChuan");

                    b.Navigation("MinhChungEFEntityObject");

                    b.Navigation("TieuChiEFEntityObject");

                    b.Navigation("TieuChuanEFEntityObject");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChiEFEntity", b =>
                {
                    b.HasOne("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChuanEFEntity", "TieuChuanEFEntityObject")
                        .WithMany("TieuChiEFEntityList")
                        .HasForeignKey("MaTieuChuan");

                    b.Navigation("TieuChuanEFEntityObject");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.MinhChungEFEntity", b =>
                {
                    b.Navigation("TepTinEFEntityList");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChiEFEntity", b =>
                {
                    b.Navigation("MinhChungEFEntityList");

                    b.Navigation("TepTinEFEntityList");
                });

            modelBuilder.Entity("QuanLyMinhChungDanhGiaCTDT.EntityFramework.Entity.TieuChuanEFEntity", b =>
                {
                    b.Navigation("MinhChungEFEntityList");

                    b.Navigation("TepTinEFEntityList");

                    b.Navigation("TieuChiEFEntityList");
                });
#pragma warning restore 612, 618
        }
    }
}
